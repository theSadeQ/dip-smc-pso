{
  "stats": {
    "total_files": 653,
    "total_lines": 248517,
    "expected_files": 7,
    "missing_files": 0,
    "total_links": 4781,
    "broken_links": 139,
    "total_code_blocks": 7597,
    "cross_references": 46
  },
  "errors": [
    "Broken link in docs\\benchmarks_methodology.md: [Statistical Benchmarks Source](../src/benchmarks/statistical_benchmarks.py)",
    "Broken link in docs\\CLAUDE.md: [method_name](dynamics)",
    "Broken link in docs\\configuration_integration_documentation.md: [controller_type](config)",
    "Broken link in docs\\configuration_integration_documentation.md: [key](value)",
    "Broken link in docs\\DOCUMENTATION_SYSTEM.md: [GitHub Actions logs](../../actions)",
    "Broken link in docs\\DOCUMENTATION_SYSTEM.md: [configuration files](dip_docs/docs/source/)",
    "Broken link in docs\\pso_factory_integration_patterns.md: [ctrl_type](gains)",
    "Broken link in docs\\PSO_INTEGRATION_GUIDE.md: [SMC Controller Factory Documentation](./CONTROLLER_FACTORY.md)",
    "Broken link in docs\\PSO_INTEGRATION_GUIDE.md: [Plant Configuration Guide](./PLANT_CONFIGURATION.md)",
    "Broken link in docs\\quality_gate_independence_framework.md: [failed_path](partial_results)",
    "Broken link in docs\\streamlit_dashboard_guide.md: [CLI Guide](simulate.py --help)",
    "Broken link in docs\\api\\factory_reference.md: [Controller Theory Reference](controller_theory.md)",
    "Broken link in docs\\api\\factory_reference.md: [PSO Optimization Guide](pso_optimization.md)",
    "Broken link in docs\\api\\factory_reference.md: [Configuration Schema](configuration_schema.md)",
    "Broken link in docs\\api\\factory_reference.md: [Performance Benchmarks](performance_benchmarks.md)",
    "Broken link in docs\\controllers\\control_primitives_reference.md: [Numerical Stability Documentation](../numerical_stability/safe_operations_reference.md)",
    "Broken link in docs\\controllers\\factory_system_guide.md: [PSO Optimization Guide](../optimization/pso_optimization_guide.md)",
    "Broken link in docs\\deployment\\DEPLOYMENT_GUIDE.md: [text](other-page.md)",
    "Broken link in docs\\factory\\enhanced_pso_integration_guide.md: [blocks_per_grid, threads_per_block](\n            gpu_particles, gpu_fitness\n        )",
    "Broken link in docs\\factory\\README.md: [Factory Performance Benchmarks](./performance_benchmarks.md)",
    "Broken link in docs\\factory\\testing_validation_documentation.md: ['create_smc_for_pso'](\n            controller_type, gains, self.plant_config\n        )",
    "Broken link in docs\\factory\\testing_validation_documentation.md: ['get_gain_bounds_for_pso'](controller_type)",
    "Broken link in docs\\factory\\testing_validation_documentation.md: ['validate_smc_gains'](SMCType.CLASSICAL, valid_classical_gains)",
    "Broken link in docs\\factory\\testing_validation_documentation.md: ['validate_smc_gains'](SMCType.ADAPTIVE, valid_adaptive_gains)",
    "Broken link in docs\\factory\\testing_validation_documentation.md: ['validate_smc_gains'](SMCType.CLASSICAL, invalid_gains)",
    "Broken link in docs\\factory\\testing_validation_documentation.md: ['validate_smc_gains'](SMCType.CLASSICAL, wrong_length_gains)",
    "Broken link in docs\\factory\\testing_validation_documentation.md: ['create_smc_for_pso'](\n                    SMCType.CLASSICAL, gains, self.plant_config\n                )",
    "Broken link in docs\\factory\\testing_validation_documentation.md: ['create_smc_for_pso'](\n                        SMCType.CLASSICAL, gains, self.plant_config\n                    )",
    "Broken link in docs\\optimization_simulation\\guide.md: [**Controllers Implementation Guide**](../controllers/implementation_guide.md)",
    "Broken link in docs\\optimization_simulation\\guide.md: [**Configuration Reference**](../configuration/reference.md)",
    "Broken link in docs\\optimization_simulation\\guide.md: [**Performance Benchmarks**](../benchmarks/performance.md)",
    "Broken link in docs\\plant\\models_guide.md: [**Plant Configurations Guide**](configurations_guide.md)",
    "Broken link in docs\\plant\\models_guide.md: [**State Validation Guide**](validation_guide.md)",
    "Broken link in docs\\reference\\index.md: [controllers](controllers/index)",
    "Broken link in docs\\reports\\pso_algorithm_validation_report.md: [i](t+1)",
    "Broken link in docs\\reports\\pso_algorithm_validation_report.md: [i](t)",
    "Broken link in docs\\reports\\pso_algorithm_validation_report.md: [i](t)",
    "Broken link in docs\\reports\\pso_algorithm_validation_report.md: [i](t)",
    "Broken link in docs\\reports\\pso_algorithm_validation_report.md: [i](t+1)",
    "Broken link in docs\\reports\\pso_algorithm_validation_report.md: [i](t)",
    "Broken link in docs\\reports\\pso_algorithm_validation_report.md: [i](t+1)",
    "Broken link in docs\\reports\\PSO_OPTIMIZATION_ENGINEER_COMPREHENSIVE_ANALYSIS_REPORT.md: [i](t+1)",
    "Broken link in docs\\reports\\PSO_OPTIMIZATION_ENGINEER_COMPREHENSIVE_ANALYSIS_REPORT.md: [i](t)",
    "Broken link in docs\\reports\\PSO_OPTIMIZATION_ENGINEER_COMPREHENSIVE_ANALYSIS_REPORT.md: [i](t)",
    "Broken link in docs\\reports\\PSO_OPTIMIZATION_ENGINEER_COMPREHENSIVE_ANALYSIS_REPORT.md: [i](t)",
    "Broken link in docs\\reports\\PSO_OPTIMIZATION_ENGINEER_COMPREHENSIVE_ANALYSIS_REPORT.md: [i](t+1)",
    "Broken link in docs\\reports\\PSO_OPTIMIZATION_ENGINEER_COMPREHENSIVE_ANALYSIS_REPORT.md: [i](t)",
    "Broken link in docs\\reports\\PSO_OPTIMIZATION_ENGINEER_COMPREHENSIVE_ANALYSIS_REPORT.md: [i](t+1)",
    "Broken link in docs\\technical\\controller_factory_integration.md: ['config_class'](**fallback_params)",
    "Broken link in docs\\technical\\mathematical_foundations.md: [\\hat{\\theta}_{i,min}, \\hat{\\theta}_{i,max}](\\hat{\\theta}_i^*)",
    "Broken link in docs\\testing\\navigation_index.md: [Guides](.quick_reference.md#guides)",
    "Broken link in docs\\testing\\navigation_index.md: [Latest Test Results](pytest_reports/2025-09-30/executive_summary.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Failure Analysis](pytest_reports/2025-09-30/failure_breakdown.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Technical Deep-Dive](pytest_reports/2025-09-30/technical_analysis.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Coverage Quality Gates](coverage_quality_gates_runbook.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Local Development Guide](coverage_local_development_guide.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Test Infrastructure Guide](test_infrastructure_guide.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Pytest Workflow](workflows/pytest_testing_workflow.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Quality Gates Troubleshooting](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Integration Summary](coverage_integration_summary.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Executive Summary](pytest_reports/2025-09-30/executive_summary.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Technical Analysis](pytest_reports/2025-09-30/technical_analysis.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Failure Breakdown](pytest_reports/2025-09-30/failure_breakdown.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Test Failure Analysis](pytest_reports/2025-09-30/test_failure_analysis.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Coverage Quality Gates Runbook](coverage_quality_gates_runbook.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Test Infrastructure Guide](test_infrastructure_guide.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Pytest Testing Workflow](workflows/pytest_testing_workflow.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Coverage Local Development Guide](coverage_local_development_guide.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Coverage Quality Gates Troubleshooting](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Coverage Integration Summary](coverage_integration_summary.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Technical Analysis](pytest_reports/2025-09-30/technical_analysis.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Config Troubleshooting](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Failure Breakdown](pytest_reports/2025-09-30/failure_breakdown.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Import Resolution](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Technical Analysis](pytest_reports/2025-09-30/technical_analysis.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Numerical Stability](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Executive Summary](pytest_reports/2025-09-30/executive_summary.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Memory Debugging](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Executive Summary](pytest_reports/2025-09-30/executive_summary.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Local Development Guide](coverage_local_development_guide.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Pytest Workflow](workflows/pytest_testing_workflow.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Troubleshooting Guide](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Quality Gates](coverage_quality_gates_runbook.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Failure Breakdown](pytest_reports/2025-09-30/failure_breakdown.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Technical Analysis](pytest_reports/2025-09-30/technical_analysis.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Troubleshooting Guide](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Quality Gates Runbook](coverage_quality_gates_runbook.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Executive Summary](pytest_reports/2025-09-30/executive_summary.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Technical Analysis](pytest_reports/2025-09-30/technical_analysis.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Local Guide](coverage_local_development_guide.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Executive Summary](pytest_reports/2025-09-30/executive_summary.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Quality Gates](coverage_quality_gates_runbook.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Integration Summary](coverage_integration_summary.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Infrastructure Guide](test_infrastructure_guide.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Technical Analysis](pytest_reports/2025-09-30/technical_analysis.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Technical Analysis](pytest_reports/2025-09-30/technical_analysis.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Troubleshooting](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\navigation_index.md: [Executive Summary](pytest_reports/2025-09-30/executive_summary.md)",
    "Broken link in docs\\testing\\README.md: [Coverage Quality Gates Runbook](coverage_quality_gates_runbook.md)",
    "Broken link in docs\\testing\\README.md: [Coverage Quality Gates Troubleshooting](coverage_quality_gates_troubleshooting.md)",
    "Broken link in docs\\testing\\README.md: [Coverage Integration Summary](coverage_integration_summary.md)",
    "Broken link in docs\\testing\\README.md: [Coverage Local Development Guide](coverage_local_development_guide.md)",
    "Broken link in docs\\testing\\README.md: [Test Infrastructure Guide](test_infrastructure_guide.md)",
    "Broken link in docs\\workflows\\pytest_testing_workflow.md: [Complete Test Execution Guide](../test_execution_execution_guide.md)",
    "Broken link in docs\\plans\\citation_system\\00_master_roadmap.md: [03_phase2_ai_research.md](03_phase2_ai_research.md)",
    "Broken link in docs\\plans\\citation_system\\00_master_roadmap.md: [04_phase3_integration.md](04_phase3_integration.md)",
    "Broken link in docs\\plans\\citation_system\\00_master_roadmap.md: [05_phase4_validation.md](05_phase4_validation.md)",
    "Broken link in docs\\plans\\citation_system\\00_master_roadmap.md: [06_phase5_documentation.md](06_phase5_documentation.md)",
    "Broken link in docs\\plans\\citation_system\\00_master_roadmap.md: [03_phase2_ai_research.md](03_phase2_ai_research.md)",
    "Broken link in docs\\plans\\citation_system\\00_master_roadmap.md: [04_phase3_integration.md](04_phase3_integration.md)",
    "Broken link in docs\\plans\\citation_system\\00_master_roadmap.md: [05_phase4_validation.md](05_phase4_validation.md)",
    "Broken link in docs\\plans\\citation_system\\00_master_roadmap.md: [06_phase5_documentation.md](06_phase5_documentation.md)",
    "Broken link in docs\\plans\\citation_system\\02_phase1_claim_extraction.md: [03_phase2_ai_research.md](03_phase2_ai_research.md)",
    "Broken link in docs\\plans\\documentation\\week_3_optimization_simulation.md: [PSO Algorithm Theory](../mathematical_foundations/pso_algorithm_theory.md)",
    "Broken link in docs\\plans\\documentation\\week_3_optimization_simulation.md: [Optimization Landscape Analysis](../mathematical_foundations/optimization_landscape_analysis.md)",
    "Broken link in docs\\plans\\documentation\\week_3_optimization_simulation.md: [Basic PSO](../examples/optimization/basic_pso.py)",
    "Broken link in docs\\plans\\documentation\\week_3_optimization_simulation.md: [Multi-Objective PSO](../examples/optimization/multi_objective_pso.py)",
    "Broken link in docs\\plans\\documentation\\week_3_optimization_simulation.md: [Custom Fitness Functions](../examples/optimization/custom_fitness.py)",
    "Broken link in docs\\plans\\documentation\\week_3_optimization_simulation.md: [Classical SMC Technical Guide](../controllers/classical_smc_technical_guide.md)",
    "Broken link in docs\\plans\\documentation\\week_3_optimization_simulation.md: [PSO Core Algorithm Guide](../optimization/pso_core_algorithm_guide.md)",
    "Broken link in docs\\plans\\documentation\\week_3_optimization_simulation.md: [SMC stability analysis](./smc_complete_theory.md#lyapunov-stability)",
    "Broken link in docs\\plans\\documentation\\week_3_optimization_simulation.md: [Controllers Module](../controllers/index.md)",
    "Broken link in docs\\reference\\controllers\\adaptive-smc.md: [SMC Theory Complete](../theory/smc_theory_complete.md)",
    "Broken link in docs\\reference\\controllers\\classical-smc.md: [SMC Theory Complete](../theory/smc_theory_complete.md)",
    "Broken link in docs\\reference\\controllers\\classical-smc.md: [Implementation Guide](../implementation/code_documentation_index.md)",
    "Broken link in docs\\reference\\controllers\\classical-smc.md: [PSO Optimization](../theory/pso_optimization_complete.md)",
    "Broken link in docs\\reference\\controllers\\hybrid-adaptive-smc.md: [SMC Theory Complete](../theory/smc_theory_complete.md)",
    "Broken link in docs\\reference\\controllers\\hybrid-adaptive-smc.md: [Results Analysis](../presentation/results-discussion.md)",
    "Broken link in docs\\reference\\controllers\\super-twisting-smc.md: [SMC Theory Complete](../theory/smc_theory_complete.md)",
    "Broken link in docs\\reference\\controllers\\super-twisting-smc.md: [Results Discussion](../presentation/results-discussion.md)",
    "Broken link in docs\\reference\\simulation\\integrators_factory.md: [method_name](config)",
    "Broken link in docs\\testing\\guides\\property_based_testing.md: [SMC Validation Mathematics](../theory/smc_validation_mathematics.md)",
    "Broken link in docs\\testing\\theory\\lyapunov_stability_testing.md: [SMC Validation Mathematics](smc_validation_mathematics.md)",
    "Broken link in docs\\testing\\theory\\lyapunov_stability_testing.md: [\u27a1\ufe0f SMC Validation Math](smc_validation_mathematics.md)",
    "Broken link in docs\\testing\\reports\\2025-09-30\\pso_convergence_analysis.md: [Performance Benchmarking Guide](../guides/performance_benchmarking.md)",
    "Broken link in docs\\testing\\reports\\2025-09-30\\pso_convergence_analysis.md: [PSO Convergence Theory](../theory/pso_convergence_theory.md)",
    "Broken link in docs\\testing\\reports\\2025-09-30\\pso_convergence_analysis.md: [Control Systems Unit Testing](../guides/control_systems_unit_testing.md)",
    "Broken link in docs\\testing\\reports\\2025-09-30\\pso_convergence_analysis.md: [\u2b05\ufe0f Back to Reports](../reports/)",
    "Broken link in docs\\testing\\reports\\2025-09-30\\pso_fitness_investigation.md: [\u2b05\ufe0f Back to Reports](../reports/)"
  ],
  "warnings": [
    "docs\\configuration_integration_documentation.md: Bare except clause (anti-pattern)",
    "docs\\factory_integration_troubleshooting_guide.md: Bare except clause (anti-pattern)",
    "docs\\pso_factory_integration_patterns.md: Bare except clause (anti-pattern)",
    "docs\\pso_troubleshooting_maintenance_manual.md: Bare except clause (anti-pattern)",
    "docs\\deployment\\production_deployment_guide.md: Bare except clause (anti-pattern)",
    "docs\\factory\\github_issue_6_factory_integration_documentation.md: Bare except clause (anti-pattern)",
    "docs\\factory\\pso_factory_api_reference.md: Bare except clause (anti-pattern)",
    "docs\\factory\\pso_factory_api_reference.md: Bare except clause (anti-pattern)",
    "docs\\technical\\pso_integration_workflows.md: Bare except clause (anti-pattern)",
    "bibliography.md: Consider using 'PSO' instead of 'particle swarm optimization'",
    "bibliography.md: Consider using 'PSO' instead of 'Particle Swarm Optimization'",
    "CLAUDE.md: Consider using 'double-inverted pendulum' instead of 'DIP'",
    "CLAUDE.md: Consider using 'classical SMC' instead of 'classical sliding mode'",
    "CLAUDE.md: Consider using 'super-twisting SMC' instead of 'STA-SMC'",
    "CLAUDE.md: Consider using 'super-twisting SMC' instead of 'STA SMC'",
    "CLAUDE.md: Consider using 'PSO' instead of 'particle swarm optimization'",
    "CLAUDE.md: Consider using 'PSO' instead of 'Particle Swarm Optimization'",
    "configuration_integration_documentation.md: Consider using 'double-inverted pendulum' instead of 'DIP'",
    "controller_pso_interface_api_documentation.md: Consider using 'classical SMC' instead of 'classical sliding mode'"
  ],
  "status": "FAILED"
}