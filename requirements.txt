
#==============================================================================#
# Project:      Double-Inverted Pendulum Sliding Mode Control (DIP-SMC-PSO)    #
# File:         requirements.txt                                             #
# Description:  Defines the project's Python dependencies. Pinning versions    #
#               in this file is critical for ensuring a stable and             #
#               reproducible environment for all developers and CI systems.    #
#==============================================================================#

# Core Scientific Computing
# Compatible versions for stable operation
numpy>=1.22.4,<2.3.0      # Core numerical computing and array support
scipy>=1.13.0,<1.14.0     # Scientific algorithms (e.g., integration for simulation)
matplotlib>=3.6.0,<4.0.0  # Plotting and data visualization
pandas>=1.5.0,<3.0.0  # Data handling for results and analysis

# Optimization and Control - VERSION BOUNDS ADDED
pyswarms>=1.3.0,<2.0.0    # Particle Swarm Optimization (PSO) toolkit for controller tuning
optuna>=3.0.0,<4.0.0      # Hyperparameter optimization framework (staged for future use)
cvxpy>=1.3.0,<2.0.0       # Convex optimization for MPC controller (experimental)

# Performance and Compilation - UPDATED FOR NUMPY 2.0+
# Updated: numba 0.60+ now supports numpy 2.0+
numba>=0.60.0,<0.62.0     # JIT compiler for accelerating Python/NumPy code (simulations)

# Configuration and Data Handling - VERSION BOUNDS ADDED
pyyaml>=6.0,<7.0          # YAML parser for loading project configuration (config.yaml)
pydantic>=2.5.0,<3.0.0    # Data validation and settings management for configuration
pydantic-settings>=2.0.0,<3.0.0  # Settings management extension for Pydantic
jsonschema>=4.17.0,<5.0.0 # JSON schema validation (for research plans)

# Testing Framework - VERSION BOUNDS ADDED
pytest>=7.4.0,<9.0.0      # Core framework for running tests
pytest-benchmark>=4.0.0,<5.0.0  # Pytest plugin for performance benchmarking
hypothesis>=6.70.0,<7.0.0 # Property-based testing to find edge cases

# Web Interface (Streamlit) - VERSION BOUNDS ADDED
streamlit>=1.28.0,<2.0.0  # Framework for the interactive web UI dashboard
plotly>=5.15.0,<6.0.0     # Interactive plotting library for the web UI
altair>=4.2.0,<6.0.0      # Declarative statistical visualization library
watchdog>=3.0.0,<4.0.0    # File system event monitoring (used by Streamlit for hot-reloading)

# ===== DOCUMENTATION DEPENDENCIES - VERSION BOUNDS ADDED =====
# Core Sphinx
sphinx>=5.0.0,<8.0.0            # Core documentation generator
sphinx-rtd-theme>=1.3.0,<3.0.0  # "Read the Docs" theme for Sphinx

# Advanced Documentation Extensions
sphinxcontrib-bibtex>=2.5.0,<3.0.0   # Bibliography support for Sphinx
sphinx-copybutton>=0.5.0,<1.0.0      # Adds a copy button to code blocks in docs
sphinx-math-dollar>=1.2.0,<2.0.0     # Enables using $ for math formulas (LaTeX)
sphinx-design>=0.4.0,<1.0.0          # Responsive web components for docs (grids, cards)
sphinx-togglebutton>=0.3.0,<1.0.0    # Creates collapsible content sections in docs
sphinxcontrib-mermaid>=0.8.0,<1.0.0  # Renders Mermaid diagrams in documentation
sphinxcontrib-plantuml>=0.24,<1.0.0  # Renders PlantUML diagrams in documentation
myst-parser>=1.0.0,<3.0.0            # Parses Markdown files (.md) with Sphinx

# Scientific Documentation
sympy>=1.11.0,<2.0.0             # Symbolic mathematics library for equations in docs

# Code Quality - VERSION BOUNDS ADDED
pygments>=2.14.0,<3.0.0          # Syntax highlighting for code blocks
black>=23.0.0,<25.0.0            # Uncompromising Python code formatter
linkchecker>=10.0.0,<11.0.0      # Checks for broken links in documentation
