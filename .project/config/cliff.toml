# git-cliff configuration file
# https://git-cliff.org/docs/configuration

[changelog]
# Changelog header
header = """
# Changelog

All notable changes to the DIP-SMC-PSO project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

"""

# Changelog body template
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [Unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**BREAKING**] {% endif %}{{ commit.message | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}]({{ commit.id }}))\
    {% endfor %}
{% endfor %}\n
"""

# Changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[git]
# Parse conventional commits
conventional_commits = true
# Filter out commits
filter_commits = true
# Regex for commit preprocessing
commit_preprocessors = [
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/theSadeQ/dip-smc-pso/issues/${2}))" },
]
# Regex for parsing commits
commit_parsers = [
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^docs", group = "Documentation" },
    { message = "^perf", group = "Performance" },
    { message = "^refactor", group = "Refactoring" },
    { message = "^style", group = "Styling" },
    { message = "^test", group = "Testing" },
    { message = "^chore\\(release\\):", skip = true },
    { message = "^chore", group = "Miscellaneous" },
    { message = "^ci", group = "CI/CD" },
    { message = "^build", group = "Build" },
    { message = "^revert", group = "Reverts" },
    { message = "^Phase", group = "Phase Deliverables" },
    { message = "^Week", group = "Weekly Deliverables" },
    { body = ".*security", group = "Security" },
]
# Protect breaking changes from being skipped
protect_breaking_commits = false
# Filter out commits that are not in conventional format
filter_unconventional = false
# Sort commits
sort_commits = "oldest"

[remote.github]
owner = "theSadeQ"
repo = "dip-smc-pso"
