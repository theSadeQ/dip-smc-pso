{
  "metadata": {
    "total_claims": 26,
    "by_priority": {
      "HIGH": 26
    }
  },
  "research_queue": {
    "HIGH": [
      "CODE-IMPL-487",
      "CODE-IMPL-488",
      "CODE-IMPL-490",
      "CODE-IMPL-491",
      "CODE-IMPL-492",
      "CODE-IMPL-493",
      "CODE-IMPL-494",
      "CODE-IMPL-495",
      "CODE-IMPL-496",
      "CODE-IMPL-497",
      "CODE-IMPL-498",
      "CODE-IMPL-499",
      "CODE-IMPL-500",
      "CODE-IMPL-501",
      "CODE-IMPL-502",
      "CODE-IMPL-503",
      "CODE-IMPL-504",
      "CODE-IMPL-507",
      "CODE-IMPL-508",
      "CODE-IMPL-509",
      "CODE-IMPL-510",
      "CODE-IMPL-512",
      "CODE-IMPL-516",
      "CODE-IMPL-517",
      "CODE-IMPL-518",
      "CODE-IMPL-519"
    ],
    "CRITICAL": [],
    "MEDIUM": []
  },
  "claims": [
    {
      "id": "CODE-IMPL-487",
      "type": "implementation",
      "scope": "module:class:ConfigCompatibilityMixin",
      "claim_text": "Mixin class for components that need configuration compatibility",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\config_compatibility.py",
      "line_number": 165,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-488",
      "type": "implementation",
      "scope": "module:function:wrap_physics_config",
      "claim_text": "Wrap physics configuration for compatibility with plant models",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\config_compatibility.py",
      "line_number": 182,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-490",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Control analysis utilities compatibility module",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\control_analysis.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-491",
      "type": "implementation",
      "scope": "module:class:CoverageMonitor",
      "claim_text": "Implements mathematical analysis of coverage trends with automated",
      "algorithm_name": "mathematical analysis",
      "source_attribution": "coverage trends with automated",
      "file_path": "src\\utils\\coverage\\monitoring.py",
      "line_number": 54,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-492",
      "type": "implementation",
      "scope": "module:class:CoverageMonitor:function:analyze_coverage_trends:function:calculate_slope",
      "claim_text": "Calculate linear regression slope using least squares method",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\coverage\\monitoring.py",
      "line_number": 203,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-493",
      "type": "implementation",
      "scope": "module:class:CoverageMonitor:function:analyze_coverage_trends:function:classify_trend",
      "claim_text": "Classify trend based on slope magnitude",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\coverage\\monitoring.py",
      "line_number": 222,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-494",
      "type": "implementation",
      "scope": "module:class:CoverageMonitor:function:_generate_trend_recommendation",
      "claim_text": "Generate actionable recommendations based on trend analysis",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\coverage\\monitoring.py",
      "line_number": 269,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-495",
      "type": "implementation",
      "scope": "module:class:CoverageMonitor:function:check_quality_gates",
      "claim_text": "Check current coverage against quality gate thresholds",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\coverage\\monitoring.py",
      "line_number": 280,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-496",
      "type": "implementation",
      "scope": "module:class:NotebookExporter",
      "claim_text": "Utility class for exporting data and plots from Jupyter notebooks",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\development\\jupyter_tools.py",
      "line_number": 24,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-497",
      "type": "implementation",
      "scope": "module:class:NotebookExporter:function:export_optimization_results",
      "claim_text": "Export PSO or other optimization results",
      "algorithm_name": "prefix",
      "source_attribution": null,
      "file_path": "src\\utils\\development\\jupyter_tools.py",
      "line_number": 188,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-498",
      "type": "implementation",
      "scope": "module",
      "claim_text": "use for optimal performance\n\nExample\n-------\n>>> from src",
      "algorithm_name": "for optimal performance\n\nExample\n-------\n>>>",
      "source_attribution": "src",
      "file_path": "src\\utils\\memory\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-499",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Production-grade memory pool for efficient memory management",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\memory\\memory_pool.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-500",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Implements the 9-step diagnostic checklist from Issue #1 resolution plan",
      "algorithm_name": "the 9-step diagnostic checklist",
      "source_attribution": "Issue #1 resolution plan",
      "file_path": "src\\utils\\monitoring\\diagnostics.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-501",
      "type": "implementation",
      "scope": "module:class:InstabilityType",
      "claim_text": "Classification of instability root causes",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\monitoring\\diagnostics.py",
      "line_number": 20,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-502",
      "type": "implementation",
      "scope": "module:class:DiagnosticChecklist",
      "claim_text": "Implements the priority-ranked diagnostic checklist from Issue #1 resolution:",
      "algorithm_name": "the priority-ranked diagnostic checklist",
      "source_attribution": "Issue #1 resolution:",
      "file_path": "src\\utils\\monitoring\\diagnostics.py",
      "line_number": 45,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-503",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Implements the stability monitoring solution from Issue #1 resolution plan,",
      "algorithm_name": "the stability monitoring solution",
      "source_attribution": "Issue #1 resolution plan,",
      "file_path": "src\\utils\\monitoring\\stability.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-504",
      "type": "implementation",
      "scope": "module:class:LyapunovDecreaseMonitor",
      "claim_text": "Implements LDR monitoring as specified in Issue #1 resolution:",
      "algorithm_name": "LDR monitoring as specified",
      "source_attribution": "Issue #1 resolution:",
      "file_path": "src\\utils\\monitoring\\stability.py",
      "line_number": 19,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-507",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Numerical stability utilities for robust mathematical operations",
      "algorithm_name": "convergence",
      "source_attribution": null,
      "file_path": "src\\utils\\numerical_stability\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-508",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Safe mathematical operations with numerical stability guarantees",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\numerical_stability\\safe_operations.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-509",
      "type": "implementation",
      "scope": "module:function:safe_divide",
      "claim_text": "Safe division with epsilon threshold protection against zero division",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\numerical_stability\\safe_operations.py",
      "line_number": 75,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-510",
      "type": "implementation",
      "scope": "module:function:safe_sqrt",
      "claim_text": "Safe square root with negative value protection",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\numerical_stability\\safe_operations.py",
      "line_number": 205,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-512",
      "type": "implementation",
      "scope": "module:class:SeedManager:function:spawn",
      "claim_text": "Return a new integer seed derived from the master generator",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\reproducibility\\seed.py",
      "line_number": 79,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-516",
      "type": "implementation",
      "scope": "module:class:AdaptiveSMCOutput",
      "claim_text": "Return type for :class:`adaptive_smc",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\types\\control_outputs.py",
      "line_number": 60,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-517",
      "type": "implementation",
      "scope": "module:class:STAOutput",
      "claim_text": "according to the super\u00e2\u20ac\u2018twisting\n    algorithm and are needed to resume control in the next time step",
      "algorithm_name": "the super\u00e2\u20ac\u2018twisting\n    algorithm and are needed to resume control",
      "source_attribution": "the next time step",
      "file_path": "src\\utils\\types\\control_outputs.py",
      "line_number": 86,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-518",
      "type": "implementation",
      "scope": "module:class:ProjectMovieGenerator",
      "claim_text": "Complete visualization plan generator for the entire DIP control project",
      "algorithm_name": "performance",
      "source_attribution": null,
      "file_path": "src\\utils\\visualization\\movie_generator.py",
      "line_number": 32,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-519",
      "type": "implementation",
      "scope": "module:class:ProjectMovieGenerator:function:create_complete_project_movie",
      "claim_text": "Create a complete movie documenting the entire project",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\utils\\visualization\\movie_generator.py",
      "line_number": 53,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    }
  ]
}