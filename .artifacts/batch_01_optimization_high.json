{
  "metadata": {
    "total_claims": 111,
    "by_priority": {
      "HIGH": 111
    }
  },
  "research_queue": {
    "HIGH": [
      "CODE-IMPL-251",
      "CODE-IMPL-252",
      "CODE-IMPL-254",
      "CODE-IMPL-255",
      "CODE-IMPL-256",
      "CODE-IMPL-257",
      "CODE-IMPL-258",
      "CODE-IMPL-259",
      "CODE-IMPL-260",
      "CODE-IMPL-261",
      "CODE-IMPL-262",
      "CODE-IMPL-263",
      "CODE-IMPL-264",
      "CODE-IMPL-265",
      "CODE-IMPL-266",
      "CODE-IMPL-267",
      "CODE-IMPL-268",
      "CODE-IMPL-269",
      "CODE-IMPL-270",
      "CODE-IMPL-271",
      "CODE-IMPL-272",
      "CODE-IMPL-273",
      "CODE-IMPL-274",
      "CODE-IMPL-275",
      "CODE-IMPL-276",
      "CODE-IMPL-277",
      "CODE-IMPL-278",
      "CODE-IMPL-279",
      "CODE-IMPL-280",
      "CODE-IMPL-281",
      "CODE-IMPL-282",
      "CODE-IMPL-283",
      "CODE-IMPL-284",
      "CODE-IMPL-285",
      "CODE-IMPL-286",
      "CODE-IMPL-287",
      "CODE-IMPL-288",
      "CODE-IMPL-289",
      "CODE-IMPL-290",
      "CODE-IMPL-291",
      "CODE-IMPL-292",
      "CODE-IMPL-293",
      "CODE-IMPL-294",
      "CODE-IMPL-295",
      "CODE-IMPL-296",
      "CODE-IMPL-297",
      "CODE-IMPL-298",
      "CODE-IMPL-299",
      "CODE-IMPL-300",
      "CODE-IMPL-301",
      "CODE-IMPL-302",
      "CODE-IMPL-303",
      "CODE-IMPL-304",
      "CODE-IMPL-306",
      "CODE-IMPL-307",
      "CODE-IMPL-308",
      "CODE-IMPL-309",
      "CODE-IMPL-311",
      "CODE-IMPL-312",
      "CODE-IMPL-313",
      "CODE-IMPL-314",
      "CODE-IMPL-315",
      "CODE-IMPL-316",
      "CODE-IMPL-319",
      "CODE-IMPL-320",
      "CODE-IMPL-321",
      "CODE-IMPL-322",
      "CODE-IMPL-323",
      "CODE-IMPL-325",
      "CODE-IMPL-326",
      "CODE-IMPL-327",
      "CODE-IMPL-328",
      "CODE-IMPL-329",
      "CODE-IMPL-330",
      "CODE-IMPL-331",
      "CODE-IMPL-332",
      "CODE-IMPL-333",
      "CODE-IMPL-334",
      "CODE-IMPL-335",
      "CODE-IMPL-336",
      "CODE-IMPL-337",
      "CODE-IMPL-338",
      "CODE-IMPL-339",
      "CODE-IMPL-340",
      "CODE-IMPL-341",
      "CODE-IMPL-342",
      "CODE-IMPL-343",
      "CODE-IMPL-344",
      "CODE-IMPL-345",
      "CODE-IMPL-346",
      "CODE-IMPL-347",
      "CODE-IMPL-348",
      "CODE-IMPL-349",
      "CODE-IMPL-350",
      "CODE-IMPL-351",
      "CODE-IMPL-352",
      "CODE-IMPL-353",
      "CODE-IMPL-354",
      "CODE-IMPL-355",
      "CODE-IMPL-356",
      "CODE-IMPL-357",
      "CODE-IMPL-358",
      "CODE-IMPL-359",
      "CODE-IMPL-360",
      "CODE-IMPL-361",
      "CODE-IMPL-362",
      "CODE-IMPL-363",
      "CODE-IMPL-364",
      "CODE-IMPL-365",
      "CODE-IMPL-366",
      "CODE-IMPL-367"
    ],
    "CRITICAL": [],
    "MEDIUM": []
  },
  "claims": [
    {
      "id": "CODE-IMPL-251",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Professional optimization framework for control engineering applications",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-252",
      "type": "implementation",
      "scope": "module:function:create_optimizer",
      "claim_text": "Create an optimizer of specified type",
      "algorithm_name": "name",
      "source_attribution": null,
      "file_path": "src\\optimization\\__init__.py",
      "line_number": 108,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-254",
      "type": "implementation",
      "scope": "module:function:run_optimization_study",
      "claim_text": "Run comprehensive optimization study comparing multiple algorithms",
      "algorithm_name": "names or configured",
      "source_attribution": null,
      "file_path": "src\\optimization\\__init__.py",
      "line_number": 225,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-255",
      "type": "implementation",
      "scope": "module:function:example_algorithm_comparison",
      "claim_text": "Example: Compare multiple optimization algorithms",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\__init__.py",
      "line_number": 311,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-256",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Professional optimization algorithms for control engineering applications",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-257",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Base classes for optimization algorithms",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-258",
      "type": "implementation",
      "scope": "module:class:OptimizationAlgorithm",
      "claim_text": "Abstract base class for optimization algorithms",
      "algorithm_name": "initialization",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 15,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-259",
      "type": "implementation",
      "scope": "module:class:OptimizationAlgorithm:function:__init__",
      "claim_text": "Initialize the optimization algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 23,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-260",
      "type": "implementation",
      "scope": "module:class:OptimizationAlgorithm:function:optimize",
      "claim_text": "Run the optimization algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 30,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-261",
      "type": "implementation",
      "scope": "module:class:OptimizationAlgorithm:function:get_algorithm_info",
      "claim_text": "Get information about the algorithm",
      "algorithm_name": "information including name",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 52,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-262",
      "type": "implementation",
      "scope": "module:class:OptimizationAlgorithm:function:reset",
      "claim_text": "Reset the algorithm to initial state",
      "algorithm_name": "to initial state",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 66,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-263",
      "type": "implementation",
      "scope": "module:class:OptimizationAlgorithm:function:supports_constraints",
      "claim_text": "Check if algorithm supports constraints",
      "algorithm_name": "supports constraints",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 71,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-264",
      "type": "implementation",
      "scope": "module:class:OptimizationAlgorithm:function:supports_parallel_evaluation",
      "claim_text": "Check if algorithm supports parallel function evaluation",
      "algorithm_name": "supports parallel function",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 81,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-265",
      "type": "implementation",
      "scope": "module:class:OptimizationAlgorithm:function:get_default_parameters",
      "claim_text": "Get default algorithm parameters",
      "algorithm_name": "parameters",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 91,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-266",
      "type": "implementation",
      "scope": "module:class:PopulationBasedAlgorithm",
      "claim_text": "Base class for population-based optimization algorithms",
      "algorithm_name": "with common functionality",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 102,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-267",
      "type": "implementation",
      "scope": "module:class:PopulationBasedAlgorithm:function:__init__",
      "claim_text": "Initialize population-based algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 109,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-268",
      "type": "implementation",
      "scope": "module:class:PopulationBasedAlgorithm:function:get_algorithm_info",
      "claim_text": "Get algorithm information including population details",
      "algorithm_name": "information including population",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 122,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-269",
      "type": "implementation",
      "scope": "module:class:PopulationBasedAlgorithm:function:reset",
      "claim_text": "Reset the algorithm including population",
      "algorithm_name": "including population",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 132,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-270",
      "type": "implementation",
      "scope": "module:class:PopulationBasedAlgorithm:function:supports_parallel_evaluation",
      "claim_text": "Population-based algorithms typically support parallel evaluation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 138,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-271",
      "type": "implementation",
      "scope": "module:class:GradientBasedAlgorithm",
      "claim_text": "Base class for gradient-based optimization algorithms",
      "algorithm_name": "with common functionality",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 143,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-272",
      "type": "implementation",
      "scope": "module:class:GradientBasedAlgorithm:function:__init__",
      "claim_text": "Initialize gradient-based algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 150,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-273",
      "type": "implementation",
      "scope": "module:class:GradientBasedAlgorithm:function:get_algorithm_info",
      "claim_text": "Get algorithm information including gradient details",
      "algorithm_name": "information including gradient",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 163,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-274",
      "type": "implementation",
      "scope": "module:class:GradientBasedAlgorithm:function:reset",
      "claim_text": "Reset the algorithm including gradient information",
      "algorithm_name": "including gradient information",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 173,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-275",
      "type": "implementation",
      "scope": "module:class:GradientBasedAlgorithm:function:requires_gradients",
      "claim_text": "Check if algorithm requires analytical gradients",
      "algorithm_name": "requires analytical gradients",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\base.py",
      "line_number": 179,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-276",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Bayesian optimization algorithms for parameter tuning",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\bayesian\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-277",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Evolutionary optimization algorithms",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-278",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Differential Evolution optimization algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\differential.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-279",
      "type": "implementation",
      "scope": "module:class:DifferentialEvolution",
      "claim_text": "Differential Evolution algorithm for global optimization",
      "algorithm_name": "for global optimization",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\differential.py",
      "line_number": 19,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-280",
      "type": "implementation",
      "scope": "module:class:DifferentialEvolution:function:__init__",
      "claim_text": "Initialize Differential Evolution optimizer",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\differential.py",
      "line_number": 26,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-281",
      "type": "implementation",
      "scope": "module:class:DifferentialEvolution:function:algorithm_name",
      "claim_text": "Algorithm name.",
      "algorithm_name": "name",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\differential.py",
      "line_number": 91,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-282",
      "type": "implementation",
      "scope": "module:class:DifferentialEvolution:function:supports_constraints",
      "claim_text": "DE can handle constraints through penalty methods",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\differential.py",
      "line_number": 96,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-283",
      "type": "implementation",
      "scope": "module:class:DifferentialEvolution:function:_mutate",
      "claim_text": "Apply DE mutation strategy",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\differential.py",
      "line_number": 231,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-284",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Genetic Algorithm implementation for control parameter optimization",
      "algorithm_name": "implementation for control",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-285",
      "type": "implementation",
      "scope": "module:class:GeneticAlgorithmConfig",
      "claim_text": "Configuration for Genetic Algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 23,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-286",
      "type": "implementation",
      "scope": "module:class:Individual",
      "claim_text": "Individual in the genetic algorithm population",
      "algorithm_name": "population",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 41,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-287",
      "type": "implementation",
      "scope": "module:class:GeneticAlgorithm",
      "claim_text": "Genetic Algorithm for parameter optimization",
      "algorithm_name": "for parameter optimization",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 61,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-288",
      "type": "implementation",
      "scope": "module:class:GeneticAlgorithm:function:__init__",
      "claim_text": "Initialize Genetic Algorithm",
      "algorithm_name": "configuration",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 76,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-289",
      "type": "implementation",
      "scope": "module:class:GeneticAlgorithm:function:optimize",
      "claim_text": "Run genetic algorithm optimization",
      "algorithm_name": "optimization",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 103,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-290",
      "type": "implementation",
      "scope": "module:class:GeneticAlgorithm:function:_select_individual",
      "claim_text": "Select individual based on selection method",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 263,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-291",
      "type": "implementation",
      "scope": "module:class:GeneticAlgorithm:function:_update_algorithm_state",
      "claim_text": "Update algorithm state after each generation",
      "algorithm_name": "state after each",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 444,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-292",
      "type": "implementation",
      "scope": "module:class:GeneticAlgorithm:function:_update_adaptive_parameters",
      "claim_text": "Update adaptive algorithm parameters",
      "algorithm_name": "parameters",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 483,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-293",
      "type": "implementation",
      "scope": "module:class:GeneticAlgorithm:function:_check_convergence",
      "claim_text": "Check if algorithm has converged",
      "algorithm_name": "has converged",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\evolutionary\\genetic.py",
      "line_number": 501,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-294",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Gradient-based optimization algorithms for control parameter tuning",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-295",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Gradient-based optimization algorithms",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient_based\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-296",
      "type": "implementation",
      "scope": "module",
      "claim_text": "BFGS quasi-Newton optimization algorithm with numerical gradients",
      "algorithm_name": "with numerical gradients",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient_based\\bfgs.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-297",
      "type": "implementation",
      "scope": "module:class:BFGSConfig",
      "claim_text": "Configuration for BFGS algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient_based\\bfgs.py",
      "line_number": 20,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-298",
      "type": "implementation",
      "scope": "module:class:BFGSOptimizer",
      "claim_text": "BFGS quasi-Newton optimization algorithm",
      "algorithm_name": "is a quasi",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient_based\\bfgs.py",
      "line_number": 37,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-299",
      "type": "implementation",
      "scope": "module:class:BFGSOptimizer:function:__init__",
      "claim_text": "Initialize BFGS algorithm",
      "algorithm_name": "configuration",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient_based\\bfgs.py",
      "line_number": 53,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-300",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Nelder-Mead simplex optimization algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient_based\\nelder_mead.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-301",
      "type": "implementation",
      "scope": "module:class:NelderMeadConfig",
      "claim_text": "Configuration for Nelder-Mead algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient_based\\nelder_mead.py",
      "line_number": 20,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-302",
      "type": "implementation",
      "scope": "module:class:NelderMead",
      "claim_text": "uses a simplex\n(n+1 vertices in n dimensions) to navigate the parameter space",
      "algorithm_name": "a simplex\n(n+1 vertices",
      "source_attribution": "n dimensions) to navigate the parameter space",
      "file_path": "src\\optimization\\algorithms\\gradient_based\\nelder_mead.py",
      "line_number": 109,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-303",
      "type": "implementation",
      "scope": "module:class:NelderMead:function:__init__",
      "claim_text": "Initialize Nelder-Mead algorithm",
      "algorithm_name": "configuration",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient_based\\nelder_mead.py",
      "line_number": 125,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-304",
      "type": "implementation",
      "scope": "module:class:NelderMead:function:_perform_iteration",
      "claim_text": "Perform one iteration of Nelder-Mead algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\gradient_based\\nelder_mead.py",
      "line_number": 243,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-306",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Memory-efficient PSO optimizer with production-grade memory management",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\memory_efficient_pso.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-307",
      "type": "implementation",
      "scope": "module:class:MemoryEfficientPSOTuner:function:optimise",
      "claim_text": "Run PSO optimization with memory management",
      "algorithm_name": "to add memory",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\memory_efficient_pso.py",
      "line_number": 289,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-308",
      "type": "implementation",
      "scope": "module:class:MemoryEfficientPSOTuner:function:_fitness",
      "claim_text": "Memory-aware fitness evaluation with monitoring and cleanup",
      "algorithm_name": "to add memory",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\memory_efficient_pso.py",
      "line_number": 327,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-309",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Multi-Objective Particle Swarm Optimization (MOPSO) for Controller Tuning",
      "algorithm_name": "specifically\ndesigned for",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\multi_objective_pso.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-311",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Particle Swarm Optimisation (PSO) tuner for sliding-mode controllers",
      "algorithm_name": "around the vectorised",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\pso_optimizer.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-312",
      "type": "implementation",
      "scope": "module:function:_seeded_global_numpy",
      "claim_text": "Context manager to temporarily seed the global NumPy RNG",
      "algorithm_name": "to ensure deterministic",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\pso_optimizer.py",
      "line_number": 77,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-313",
      "type": "implementation",
      "scope": "module:class:PSOTuner",
      "claim_text": "High-throughput, vectorised tuner for sliding-mode controllers",
      "algorithm_name": "around the\nvectorised",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\pso_optimizer.py",
      "line_number": 103,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-314",
      "type": "implementation",
      "scope": "module:class:PSOTuner:function:optimise",
      "claim_text": "Run particle swarm optimisation with optional overrides",
      "algorithm_name": "constructs a",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\pso_optimizer.py",
      "line_number": 633,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-315",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Swarm intelligence optimization algorithms",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\swarm\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-316",
      "type": "implementation",
      "scope": "module:class:ParticleSwarmOptimizer",
      "claim_text": "Professional Particle Swarm Optimization algorithm",
      "algorithm_name": "with advanced features",
      "source_attribution": null,
      "file_path": "src\\optimization\\algorithms\\swarm\\pso.py",
      "line_number": 19,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-319",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Optimization benchmarks and test functions for algorithm validation",
      "algorithm_name": "validation",
      "source_attribution": null,
      "file_path": "src\\optimization\\benchmarks\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-320",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Constraint handling for optimization problems in control systems",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\constraints\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-321",
      "type": "implementation",
      "scope": "module:class:OptimizationContext:function:create_optimizer_factory",
      "claim_text": "Factory method to create optimizers",
      "algorithm_name": "to create optimizers",
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\context.py",
      "line_number": 166,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-322",
      "type": "implementation",
      "scope": "module:class:OptimizationContext:function:get_available_algorithms",
      "claim_text": "Get list of available optimization algorithms",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\context.py",
      "line_number": 197,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-323",
      "type": "implementation",
      "scope": "module:function:optimize",
      "claim_text": "Quick optimization function",
      "algorithm_name": "name",
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\context.py",
      "line_number": 210,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-325",
      "type": "implementation",
      "scope": "module:class:Optimizer:function:__init__",
      "claim_text": "parameter_space : ParameterSpace",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\interfaces.py",
      "line_number": 274,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-326",
      "type": "implementation",
      "scope": "module:class:Optimizer:function:optimize",
      "claim_text": "problem : OptimizationProblem",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\interfaces.py",
      "line_number": 289,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-327",
      "type": "implementation",
      "scope": "module:class:Optimizer:function:algorithm_name",
      "claim_text": "Name of the optimization algorithm",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\interfaces.py",
      "line_number": 316,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-328",
      "type": "implementation",
      "scope": "module:class:Optimizer:function:supports_constraints",
      "claim_text": "Whether algorithm supports constraints",
      "algorithm_name": "supports constraints",
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\interfaces.py",
      "line_number": 322,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-329",
      "type": "implementation",
      "scope": "module:class:Optimizer:function:supports_bounds",
      "claim_text": "Whether algorithm supports parameter bounds",
      "algorithm_name": "supports parameter bounds",
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\interfaces.py",
      "line_number": 328,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-330",
      "type": "implementation",
      "scope": "module:class:Optimizer:function:is_population_based",
      "claim_text": "uses a population of candidates",
      "algorithm_name": "a population",
      "source_attribution": "candidates",
      "file_path": "src\\optimization\\core\\interfaces.py",
      "line_number": 334,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-331",
      "type": "implementation",
      "scope": "module:class:PopulationBasedOptimizer:function:update_population",
      "claim_text": "Update population based on fitness values",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\interfaces.py",
      "line_number": 399,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-332",
      "type": "implementation",
      "scope": "module:class:MultiObjectiveProblem:function:__init__",
      "claim_text": "Initialize multi-objective problem",
      "algorithm_name": "optimization_type",
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\problem.py",
      "line_number": 149,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-333",
      "type": "implementation",
      "scope": "module:class:OptimizationResultsManager:function:_generate_comparison_recommendations",
      "claim_text": "Generate recommendations based on comparison analysis",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\core\\results_manager.py",
      "line_number": 462,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-334",
      "type": "implementation",
      "scope": "module:class:CompositeObjective:function:__init__",
      "claim_text": "Initialize composite objective",
      "algorithm_name": "to combine objectives",
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\base.py",
      "line_number": 141,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-335",
      "type": "implementation",
      "scope": "module:class:CompositeObjective:function:_combine_objectives",
      "claim_text": "Combine objective values according to method",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\base.py",
      "line_number": 187,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-336",
      "type": "implementation",
      "scope": "module:class:RobustnessObjective:function:_compute_objective_from_simulation",
      "claim_text": "Compute robustness objective",
      "algorithm_name": "evaluates robustness by",
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\control\\robustness.py",
      "line_number": 75,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-337",
      "type": "implementation",
      "scope": "module:class:StabilityMarginObjective:function:_compute_lyapunov_stability",
      "claim_text": "Compute Lyapunov-based stability metric",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\control\\stability.py",
      "line_number": 113,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-338",
      "type": "implementation",
      "scope": "module:class:StabilityMarginObjective:function:_compute_stability_margins",
      "claim_text": "uses frequency response estimation from simulation data",
      "algorithm_name": "frequency response estimation",
      "source_attribution": "simulation data",
      "file_path": "src\\optimization\\objectives\\control\\stability.py",
      "line_number": 158,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-339",
      "type": "implementation",
      "scope": "module:class:FrequencyResponseObjective",
      "claim_text": "Objective based on frequency response characteristics",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\control\\tracking.py",
      "line_number": 220,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-340",
      "type": "implementation",
      "scope": "module:class:ParetoObjective",
      "claim_text": "Multi-objective optimization using Pareto dominance",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\multi\\pareto.py",
      "line_number": 18,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-341",
      "type": "implementation",
      "scope": "module:class:ParetoObjective:function:__init__",
      "claim_text": "Initialize Pareto multi-objective",
      "algorithm_name": "to convert Pareto",
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\multi\\pareto.py",
      "line_number": 29,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-342",
      "type": "implementation",
      "scope": "module:class:WeightedSumObjective",
      "claim_text": "Multi-objective optimization using weighted sum scalarization",
      "algorithm_name": "is simple but",
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\multi\\weighted_sum.py",
      "line_number": 18,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-343",
      "type": "implementation",
      "scope": "module:class:WeightedSumObjective:function:__init__",
      "claim_text": "Initialize weighted sum multi-objective",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\multi\\weighted_sum.py",
      "line_number": 30,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-344",
      "type": "implementation",
      "scope": "module:class:WeightedSumObjective:function:_normalize_objectives",
      "claim_text": "Normalize objective values based on selected method",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\multi\\weighted_sum.py",
      "line_number": 133,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-345",
      "type": "implementation",
      "scope": "module:class:AdaptiveWeightedSumObjective",
      "claim_text": "Adaptive weighted sum that automatically adjusts weights based on objective performance",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\multi\\weighted_sum.py",
      "line_number": 393,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-346",
      "type": "implementation",
      "scope": "module:class:AdaptiveWeightedSumObjective:function:_adapt_weights",
      "claim_text": "Adapt weights based on objective performance",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\multi\\weighted_sum.py",
      "line_number": 430,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-347",
      "type": "implementation",
      "scope": "module:class:UndershootObjective",
      "claim_text": "Objective function specifically for minimizing undershoot",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\system\\overshoot.py",
      "line_number": 410,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-348",
      "type": "implementation",
      "scope": "module:class:SettlingTimeObjective",
      "claim_text": "Objective function for minimizing system settling time",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\system\\settling_time.py",
      "line_number": 15,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-349",
      "type": "implementation",
      "scope": "module:class:SettlingTimeObjective:function:_find_settling_time",
      "claim_text": "Find the settling time based on tolerance criteria",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\objectives\\system\\settling_time.py",
      "line_number": 221,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-350",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Convergence analysis tools for optimization results",
      "algorithm_name": "performance assessment",
      "source_attribution": null,
      "file_path": "src\\optimization\\results\\convergence\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-351",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Convergence monitoring and analysis for optimization algorithms",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\results\\convergence.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-352",
      "type": "implementation",
      "scope": "module:class:ConvergenceAnalyzer:function:compare_convergence_curves",
      "claim_text": "Compare multiple convergence curves",
      "algorithm_name": "names to fitness",
      "source_attribution": null,
      "file_path": "src\\optimization\\results\\convergence.py",
      "line_number": 293,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-353",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Optimization solvers and interfaces for different optimization libraries",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\solvers\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-354",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Advanced PSO Hyperparameter Optimization for Factory-Generated Controllers",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\tuning\\pso_hyperparameter_optimizer.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-355",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Validation and testing framework for optimization algorithms",
      "algorithm_name": "performance and reliability",
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\__init__.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-356",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Enhanced PSO Convergence Criteria and Validation Algorithms",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\enhanced_convergence_analyzer.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-357",
      "type": "implementation",
      "scope": "module:class:EnhancedConvergenceAnalyzer:function:_calculate_stagnation_score",
      "claim_text": "Calculate stagnation score based on recent fitness variations",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\enhanced_convergence_analyzer.py",
      "line_number": 392,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-358",
      "type": "implementation",
      "scope": "module:class:EnhancedConvergenceAnalyzer:function:_update_convergence_status",
      "claim_text": "Update internal convergence status based on metrics",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\enhanced_convergence_analyzer.py",
      "line_number": 602,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-359",
      "type": "implementation",
      "scope": "module:class:PSOConvergenceValidator",
      "claim_text": "Validation framework for PSO convergence algorithms",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\enhanced_convergence_analyzer.py",
      "line_number": 697,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-360",
      "type": "implementation",
      "scope": "module",
      "claim_text": "based on controller physics\n- Multi-objective parameter space analysis\n- Convergence-aware bounds adjustment\n- Statistical validation of parameter effectiveness",
      "algorithm_name": "controller physics\n- Multi-objective parameter space analysis\n- Convergence-aware bounds adjustment\n- Statistical validation",
      "source_attribution": "parameter effectiveness",
      "file_path": "src\\optimization\\validation\\pso_bounds_optimizer.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-361",
      "type": "implementation",
      "scope": "module:class:BoundsOptimizationStrategy",
      "claim_text": "Strategy for optimizing parameter bounds",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\pso_bounds_optimizer.py",
      "line_number": 37,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-362",
      "type": "implementation",
      "scope": "module:class:PSOBoundsOptimizer:function:optimize_bounds_for_controller",
      "claim_text": "Optimize PSO parameter bounds for specific controller type",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\pso_bounds_optimizer.py",
      "line_number": 165,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-363",
      "type": "implementation",
      "scope": "module:class:PSOBoundsOptimizer:function:_generate_performance_driven_bounds",
      "claim_text": "Generate bounds based on empirical performance data",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\pso_bounds_optimizer.py",
      "line_number": 293,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-364",
      "type": "implementation",
      "scope": "module:class:PSOBoundsOptimizer:function:_select_optimal_bounds",
      "claim_text": "Select optimal bounds based on performance metrics and strategy",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\pso_bounds_optimizer.py",
      "line_number": 477,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-365",
      "type": "implementation",
      "scope": "module",
      "claim_text": "PSO Bounds Validation and Optimization Module",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\pso_bounds_validator.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-366",
      "type": "implementation",
      "scope": "module:class:PSOBoundsValidator:function:_estimate_convergence_difficulty",
      "claim_text": "Estimate convergence difficulty based on bounds width",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\pso_bounds_validator.py",
      "line_number": 336,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-367",
      "type": "implementation",
      "scope": "module:class:PSOBoundsValidator:function:_generate_improved_bounds",
      "claim_text": "Generate improved bounds based on theoretical analysis",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\optimization\\validation\\pso_bounds_validator.py",
      "line_number": 348,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    }
  ]
}