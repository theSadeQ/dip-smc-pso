{
  "metadata": {
    "total_claims": 31,
    "by_priority": {
      "HIGH": 31
    }
  },
  "research_queue": {
    "HIGH": [
      "CODE-IMPL-220",
      "CODE-IMPL-221",
      "CODE-IMPL-222",
      "CODE-IMPL-223",
      "CODE-IMPL-224",
      "CODE-IMPL-225",
      "CODE-IMPL-226",
      "CODE-IMPL-227",
      "CODE-IMPL-228",
      "CODE-IMPL-229",
      "CODE-IMPL-230",
      "CODE-IMPL-231",
      "CODE-IMPL-232",
      "CODE-IMPL-233",
      "CODE-IMPL-234",
      "CODE-IMPL-235",
      "CODE-IMPL-236",
      "CODE-IMPL-237",
      "CODE-IMPL-238",
      "CODE-IMPL-239",
      "CODE-IMPL-240",
      "CODE-IMPL-241",
      "CODE-IMPL-242",
      "CODE-IMPL-243",
      "CODE-IMPL-244",
      "CODE-IMPL-245",
      "CODE-IMPL-246",
      "CODE-IMPL-247",
      "CODE-IMPL-248",
      "CODE-IMPL-249",
      "CODE-IMPL-250"
    ],
    "CRITICAL": [],
    "MEDIUM": []
  },
  "claims": [
    {
      "id": "CODE-IMPL-220",
      "type": "implementation",
      "scope": "module:class:CompressionType",
      "claim_text": "Compression algorithm types",
      "algorithm_name": "types",
      "source_attribution": null,
      "file_path": "src\\interfaces\\data_exchange\\data_types.py",
      "line_number": 42,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-221",
      "type": "implementation",
      "scope": "module:class:DataMessage:function:is_expired",
      "claim_text": "Check if message has expired based on TTL",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\data_exchange\\data_types.py",
      "line_number": 170,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-222",
      "type": "implementation",
      "scope": "module:class:SerializerFactory:function:auto_select_serializer",
      "claim_text": "Automatically select best serializer based on data analysis",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\data_exchange\\factory.py",
      "line_number": 100,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-223",
      "type": "implementation",
      "scope": "module:class:SerializerFactory:function:_create_serializer_impl",
      "claim_text": "Internal serializer creation implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\data_exchange\\factory.py",
      "line_number": 156,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-224",
      "type": "implementation",
      "scope": "module",
      "claim_text": "RESILIENT Factory for serializers and data exchange components",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\data_exchange\\factory_resilient.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-225",
      "type": "implementation",
      "scope": "module:class:ResilientSerializerFactory:function:_create_serializer_impl",
      "claim_text": "Implementation of serializer creation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\data_exchange\\factory_resilient.py",
      "line_number": 247,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-226",
      "type": "implementation",
      "scope": "module:class:DataSchema:function:is_valid",
      "claim_text": "Check if data is valid according to this schema",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\data_exchange\\schemas.py",
      "line_number": 416,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-227",
      "type": "implementation",
      "scope": "module:class:ServoActuator",
      "claim_text": "Servo motor actuator implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\actuators.py",
      "line_number": 314,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-228",
      "type": "implementation",
      "scope": "module:class:StepperMotor",
      "claim_text": "Stepper motor actuator implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\actuators.py",
      "line_number": 634,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-229",
      "type": "implementation",
      "scope": "module:class:PneumaticActuator",
      "claim_text": "Pneumatic actuator implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\actuators.py",
      "line_number": 808,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-230",
      "type": "implementation",
      "scope": "module:class:NIDAQInterface",
      "claim_text": "National Instruments DAQ interface implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\daq_systems.py",
      "line_number": 293,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-231",
      "type": "implementation",
      "scope": "module:class:AdcInterface",
      "claim_text": "Generic ADC interface implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\daq_systems.py",
      "line_number": 572,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-232",
      "type": "implementation",
      "scope": "module:class:BaseDevice",
      "claim_text": "Base implementation of DeviceDriver with common functionality",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\device_drivers.py",
      "line_number": 428,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-233",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Hardware interface factory for creating device drivers",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\factory.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-234",
      "type": "implementation",
      "scope": "module:class:AnalogSensor",
      "claim_text": "Analog sensor implementation for continuous value measurements",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\sensors.py",
      "line_number": 218,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-235",
      "type": "implementation",
      "scope": "module:class:DigitalSensor",
      "claim_text": "Digital sensor implementation for binary state measurements",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\sensors.py",
      "line_number": 359,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-236",
      "type": "implementation",
      "scope": "module:class:IMUSensor",
      "claim_text": "Inertial Measurement Unit sensor implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\sensors.py",
      "line_number": 521,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-237",
      "type": "implementation",
      "scope": "module:class:ModbusDevice",
      "claim_text": "Modbus RTU/TCP device implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\serial_devices.py",
      "line_number": 255,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-238",
      "type": "implementation",
      "scope": "module:class:CANDevice",
      "claim_text": "CAN bus device implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hardware\\serial_devices.py",
      "line_number": 543,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-239",
      "type": "implementation",
      "scope": "module:class:LinearPlantModel",
      "claim_text": "Linear plant model implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\hil\\simulation_bridge.py",
      "line_number": 183,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-240",
      "type": "implementation",
      "scope": "module:class:TroubleshootingAssistant:function:_get_potential_causes",
      "claim_text": "uses for a category of issues",
      "algorithm_name": "for a category",
      "source_attribution": "issues",
      "file_path": "src\\interfaces\\monitoring\\diagnostics.py",
      "line_number": 598,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.6,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-241",
      "type": "implementation",
      "scope": "module:class:ComponentHealth:function:_update_overall_status",
      "claim_text": "Update overall status based on recent check results",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\monitoring\\health_monitor.py",
      "line_number": 114,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-242",
      "type": "implementation",
      "scope": "module:class:MetricsCollector:function:_record_metric_value",
      "claim_text": "Record metric value with appropriate method",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\monitoring\\metrics_collector.py",
      "line_number": 388,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-243",
      "type": "implementation",
      "scope": "module",
      "claim_text": "DEADLOCK-FREE Metrics Collection System - Production Ready",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\monitoring\\metrics_collector_deadlock_free.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-244",
      "type": "implementation",
      "scope": "module:class:DeadlockFreeMetric",
      "claim_text": "Individual metric with deadlock-free implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\monitoring\\metrics_collector_deadlock_free.py",
      "line_number": 77,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-245",
      "type": "implementation",
      "scope": "module:class:DeadlockFreeMetricsCollector:function:collect_metric",
      "claim_text": "Collect metric value - DEADLOCK-FREE implementation",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\monitoring\\metrics_collector_deadlock_free.py",
      "line_number": 276,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-246",
      "type": "implementation",
      "scope": "module:class:MetricConfig",
      "claim_text": "Configuration for individual metrics based on environment profile",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\monitoring\\metrics_collector_fixed.py",
      "line_number": 85,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-247",
      "type": "implementation",
      "scope": "module:class:Metric:function:__post_init__",
      "claim_text": "Configure metric based on profile after initialization",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\monitoring\\metrics_collector_fixed.py",
      "line_number": 149,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-248",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Performance-optimized serialization with monitoring and metrics",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\monitoring\\performance_tracker.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-249",
      "type": "implementation",
      "scope": "module",
      "claim_text": "Network interface factory for creating communication interfaces",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\network\\factory.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    },
    {
      "id": "CODE-IMPL-250",
      "type": "implementation",
      "scope": "module",
      "claim_text": "DEADLOCK-FREE UDP communication interface for real-time control systems",
      "algorithm_name": null,
      "source_attribution": null,
      "file_path": "src\\interfaces\\network\\udp_interface_deadlock_free.py",
      "line_number": 1,
      "has_citation": false,
      "citation_format": null,
      "confidence": 0.65,
      "category": "implementation",
      "priority": "HIGH"
    }
  ]
}