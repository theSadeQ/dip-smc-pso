[
  {
    "claim_id": "CODE-IMPL-130",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header describing composition architecture pattern - software design documentation, not adaptive SMC algorithm theory",
    "code_summary": "Adaptive Sliding Mode Control using composed components (LinearSlidingSurface, AdaptationLaw, UncertaintyEstimator, SwitchingFunction)",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-133",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Method implementing uncertainty estimation logic using sliding surface behavior - standard implementation utility, not a specific published algorithm",
    "code_summary": "Update uncertainty estimate based on sliding surface behavior",
    "needs_citation": false,
    "implementation_type": "utility"
  },
  {
    "claim_id": "CODE-IMPL-136",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Package __init__.py header documenting classical SMC package organization - software structure documentation",
    "code_summary": "Classical SMC Algorithm Package",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-137",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header describing boundary layer implementation for chattering reduction - organizational documentation, not specific algorithm",
    "code_summary": "Implements boundary layer method for chattering reduction in sliding mode control",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-138",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Class docstring for BoundaryLayer class - software abstraction documentation",
    "code_summary": "Boundary layer implementation for chattering reduction",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-139",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "__init__ method for BoundaryLayer class - constructor implementation, not algorithmic theory",
    "code_summary": "Initialize boundary layer",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-140",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header for configuration schema - software configuration documentation, not SMC control theory",
    "code_summary": "Configuration Schema for Classical SMC",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-141",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Class docstring for type-safe configuration dataclass - software engineering pattern, not control theory",
    "code_summary": "Type-safe configuration for Classical SMC controller",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-143",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header describing modular controller architecture - software design documentation",
    "code_summary": "Modular Classical SMC Controller",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-154",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Method implementing switching logic evaluation - implementation utility, not a specific published switching algorithm",
    "code_summary": "Evaluate switching based on sliding surface magnitude",
    "needs_citation": false,
    "implementation_type": "utility"
  },
  {
    "claim_id": "CODE-IMPL-179",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Method docstring for control computation in classical SMC - implementation method, not algorithm derivation",
    "code_summary": "Compute the control input for the classical SMC",
    "needs_citation": false,
    "implementation_type": "utility"
  },
  {
    "claim_id": "CODE-IMPL-184",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header for sliding surface calculations - organizational documentation for shared component library",
    "code_summary": "Sliding Surface Calculations for SMC Controllers",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-185",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Class docstring for LinearSlidingSurface class - software abstraction documentation",
    "code_summary": "Linear sliding surface for conventional SMC",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-187",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Class docstring for higher-order sliding surface class - software abstraction documentation",
    "code_summary": "Higher-order sliding surface for Super-Twisting and advanced SMC",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-188",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Method docstring for computing higher-order sliding surface - implementation method, not algorithm theory",
    "code_summary": "Compute higher-order sliding surface (simplified implementation)",
    "needs_citation": false,
    "implementation_type": "utility"
  },
  {
    "claim_id": "CODE-IMPL-196",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Method implementing adaptive boundary layer thickness calculation - implementation utility, not a specific published adaptation law",
    "code_summary": "Adaptive boundary layer thickness based on surface derivative",
    "needs_citation": false,
    "implementation_type": "utility"
  },
  {
    "claim_id": "CODE-IMPL-199",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Method docstring for computing sliding surface value - implementation method, not algorithm derivation",
    "code_summary": "Compute the sliding surface value s",
    "needs_citation": false,
    "implementation_type": "utility"
  },
  {
    "claim_id": "CODE-IMPL-205",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Code comment describing linear combination of state variables - inline documentation, not citation-worthy theory",
    "code_summary": "the sliding surface is a linear combination of state",
    "needs_citation": false,
    "implementation_type": "utility"
  }
]
