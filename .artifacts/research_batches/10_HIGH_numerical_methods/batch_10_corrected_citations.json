[
  {
    "claim_id": "CODE-IMPL-371",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header documenting the purpose of numerical stability utilities - pure software documentation, not theoretical explanation",
    "code_summary": "Numerical Stability Utilities for Plant Dynamics",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-372",
    "category": "B",
    "confidence": "HIGH",
    "rationale": "Implementation of Tikhonov regularization with adaptive damping based on matrix conditioning - specific published algorithm for ill-conditioned linear systems",
    "code_summary": "Adaptive matrix regularization using Tikhonov method with SVD-based condition number analysis",
    "needs_citation": true,
    "algorithm_name": "Tikhonov regularization with adaptive damping",
    "suggested_citation": "Hansen (1998)",
    "bibtex_key": "hansen1998rank",
    "doi_or_url": "10.1137/1.9780898719697",
    "book_title": "Rank-Deficient and Discrete Ill-Posed Problems: Numerical Aspects of Linear Inversion",
    "publisher": "Society for Industrial and Applied Mathematics",
    "reference_type": "book"
  },
  {
    "claim_id": "CODE-IMPL-395",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header describing software architecture (type-safe configuration, performance optimizations) - implementation pattern, not algorithmic theory",
    "code_summary": "Simplified DIP dynamics implementation with focused physics computation",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-398",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module docstring describing software engineering features (type safety, JIT compilation, monitoring) - not numerical method theory",
    "code_summary": "Simplified DIP dynamics featuring type-safe configuration and performance optimizations",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-409",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Base interface protocol for numerical integration methods - software abstraction pattern, not a specific algorithm",
    "code_summary": "Base interface for numerical integration methods",
    "needs_citation": false,
    "implementation_type": "interface"
  },
  {
    "claim_id": "CODE-IMPL-417",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Package header documenting simulation engine organization - software architecture, not numerical method theory",
    "code_summary": "Simulation engines and numerical integration methods",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-427",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Package header for numerical integration module - software organization, not algorithmic content",
    "code_summary": "Numerical integration methods for simulation framework",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-433",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header for adaptive RK methods - organizational documentation, not algorithm explanation",
    "code_summary": "Adaptive Runge-Kutta integration methods with error control",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-434",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Base class docstring for adaptive RK hierarchy - software abstraction, not a specific algorithm",
    "code_summary": "Base class for adaptive Runge-Kutta methods",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-435",
    "category": "B",
    "confidence": "HIGH",
    "rationale": "Implementation of Dormand-Prince 4(5) embedded Runge-Kutta method with complete Butcher tableau coefficients - specific published algorithm",
    "code_summary": "Dormand-Prince 4(5) embedded Runge-Kutta method with adaptive step size",
    "needs_citation": true,
    "algorithm_name": "Dormand-Prince 4(5) embedded Runge-Kutta method",
    "suggested_citation": "Dormand & Prince (1980)",
    "bibtex_key": "dormand1980family",
    "doi_or_url": "10.1016/0771-050X(80)90013-3",
    "paper_title": "A family of embedded Runge-Kutta formulae",
    "journal": "Journal of Computational and Applied Mathematics",
    "volume_pages": "6(1), 19-26",
    "reference_type": "paper"
  },
  {
    "claim_id": "CODE-IMPL-439",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Base class docstring for integration method hierarchy - software abstraction pattern, not a specific algorithm",
    "code_summary": "Base class for numerical integration methods",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-461",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header for fixed step-size methods - organizational documentation, not algorithm explanation",
    "code_summary": "Fixed step-size Runge-Kutta integration methods",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-462",
    "category": "B",
    "confidence": "HIGH",
    "rationale": "Class implementing second-order Runge-Kutta midpoint method - classic published algorithm from numerical analysis textbooks",
    "code_summary": "Second-order Runge-Kutta method (midpoint rule)",
    "needs_citation": true,
    "algorithm_name": "Second-order Runge-Kutta (midpoint method)",
    "suggested_citation": "Butcher (2003)",
    "bibtex_key": "butcher2003numerical",
    "doi_or_url": "10.1002/0470868279",
    "book_title": "Numerical Methods for Ordinary Differential Equations",
    "publisher": "John Wiley & Sons",
    "reference_type": "book"
  },
  {
    "claim_id": "CODE-IMPL-464",
    "category": "B",
    "confidence": "HIGH",
    "rationale": "Method implementing the RK2 midpoint integration algorithm k1 = f(t,x), k2 = f(t+dt/2, x+dt*k1/2), x_new = x + dt*k2 - specific published algorithm",
    "code_summary": "Integrate using second-order Runge-Kutta (midpoint) method",
    "needs_citation": true,
    "algorithm_name": "Second-order Runge-Kutta integration",
    "suggested_citation": "Butcher (2003)",
    "bibtex_key": "butcher2003numerical",
    "doi_or_url": "10.1002/0470868279",
    "book_title": "Numerical Methods for Ordinary Differential Equations",
    "publisher": "John Wiley & Sons",
    "reference_type": "book"
  },
  {
    "claim_id": "CODE-IMPL-465",
    "category": "B",
    "confidence": "HIGH",
    "rationale": "Class implementing classical fourth-order Runge-Kutta (RK4) method - classic published algorithm",
    "code_summary": "Fourth-order Runge-Kutta method (classic RK4)",
    "needs_citation": true,
    "algorithm_name": "Classical fourth-order Runge-Kutta (RK4)",
    "suggested_citation": "Butcher (2003)",
    "bibtex_key": "butcher2003numerical",
    "doi_or_url": "10.1002/0470868279",
    "book_title": "Numerical Methods for Ordinary Differential Equations",
    "publisher": "John Wiley & Sons",
    "reference_type": "book"
  },
  {
    "claim_id": "CODE-IMPL-467",
    "category": "B",
    "confidence": "HIGH",
    "rationale": "Method implementing RK4 algorithm with four-stage evaluation (k1, k2, k3, k4) and weighted combination - specific published algorithm",
    "code_summary": "Integrate using fourth-order Runge-Kutta method",
    "needs_citation": true,
    "algorithm_name": "Fourth-order Runge-Kutta integration",
    "suggested_citation": "Butcher (2003)",
    "bibtex_key": "butcher2003numerical",
    "doi_or_url": "10.1002/0470868279",
    "book_title": "Numerical Methods for Ordinary Differential Equations",
    "publisher": "John Wiley & Sons",
    "reference_type": "book"
  },
  {
    "claim_id": "CODE-IMPL-468",
    "category": "B",
    "confidence": "HIGH",
    "rationale": "Class implementing Runge-Kutta 3/8 rule, an alternative fourth-order method with different stability properties - classic published algorithm",
    "code_summary": "Runge-Kutta 3/8 rule (alternative 4th-order method)",
    "needs_citation": true,
    "algorithm_name": "Runge-Kutta 3/8 rule",
    "suggested_citation": "Butcher (2003)",
    "bibtex_key": "butcher2003numerical",
    "doi_or_url": "10.1002/0470868279",
    "book_title": "Numerical Methods for Ordinary Differential Equations",
    "publisher": "John Wiley & Sons",
    "reference_type": "book"
  },
  {
    "claim_id": "CODE-IMPL-470",
    "category": "B",
    "confidence": "HIGH",
    "rationale": "Method implementing RK 3/8 rule with four-stage evaluation and 3/8 weighting scheme - specific published algorithm",
    "code_summary": "Integrate using Runge-Kutta 3/8 rule",
    "needs_citation": true,
    "algorithm_name": "Runge-Kutta 3/8 integration",
    "suggested_citation": "Butcher (2003)",
    "bibtex_key": "butcher2003numerical",
    "doi_or_url": "10.1002/0470868279",
    "book_title": "Numerical Methods for Ordinary Differential Equations",
    "publisher": "John Wiley & Sons",
    "reference_type": "book"
  },
  {
    "claim_id": "CODE-IMPL-507",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Package header for numerical stability utilities - organizational documentation, not algorithm theory",
    "code_summary": "Numerical stability utilities for robust mathematical operations",
    "needs_citation": false,
    "implementation_type": "initialization"
  },
  {
    "claim_id": "CODE-IMPL-508",
    "category": "C",
    "confidence": "HIGH",
    "rationale": "Module header for safe operations module - organizational documentation, not specific numerical method theory",
    "code_summary": "Safe mathematical operations with numerical stability guarantees",
    "needs_citation": false,
    "implementation_type": "initialization"
  }
]
