# No deprecated parameters found in config.yaml
# All controller configurations use current parameter names
# Validation completed: 2025-10-01

# Validation Results Summary:
# - classical_smc: PASS (parameters: max_force, boundary_layer, dt)
# - sta_smc: PASS (parameters: gains[6], damping_gain, max_force, dt, boundary_layer)
# - adaptive_smc: PASS (parameters: max_force, leak_rate, dead_zone, adapt_rate_limit, K_min, K_max, dt, smooth_switch, boundary_layer)
# - hybrid_adaptive_sta_smc: PASS (parameters: max_force, dt, k1_init, k2_init, gamma1, gamma2, dead_zone, enable_equivalent, ...)

# Cross-Reference Validation:
# ✓ Factory deprecation mappings (factory/__init__.py:125-136) match deprecation.py
# ✓ Config.yaml uses only current parameter names
# ✓ No deprecated parameters detected in controller_defaults (lines 30-64)
# ✓ No deprecated parameters detected in controllers section (lines 65-149)

# Specific Validation Highlights:
# 1. hybrid_adaptive_sta_smc correctly uses 'enable_equivalent' (not deprecated 'use_equivalent')
# 2. classical_smc uses 'boundary_layer' (not deprecated 'boundary_thickness' or 'force_saturation')
# 3. sta_smc gains array properly structured [K1, K2, k1, k2, λ1, λ2]
# 4. adaptive_smc uses 'leak_rate' (not deprecated 'leakage_rate')

# Documentation in config.yaml (lines 132-137) correctly explains:
# "The ``enable_equivalent`` flag toggles the model‑based equivalent
# control term. The legacy alias ``use_equivalent`` has been removed
# from this configuration; the controller still recognises it for
# backward compatibility and will emit a ``DeprecationWarning`` when
# provided. New configurations should specify ``enable_equivalent``
# exclusively to avoid ambiguity."

# Issue #20 Resolution:
# Runtime parameter choice warnings (if any) are NOT caused by deprecated
# parameters in config.yaml. All parameter names are current and compliant.
#
# If runtime warnings persist, investigate:
# 1. Dynamic parameter construction in code paths
# 2. Test fixtures using deprecated names
# 3. PSO optimization parameter generation
# 4. Legacy code paths bypassing factory validation
