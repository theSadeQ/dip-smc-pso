{
  "mcpServers": {
    "filesystem": {
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\sadeg\\AppData\\Roaming\\npm\\node_modules\\@modelcontextprotocol\\server-filesystem\\dist\\index.js",
        "D:\\Projects\\main"
      ],
      "env": {},
      "description": "File system access for code and log analysis"
    },
    "github": {
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\sadeg\\AppData\\Roaming\\npm\\node_modules\\@modelcontextprotocol\\server-github\\dist\\index.js"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_TOKEN}"
      },
      "description": "GitHub integration for issue tracking and repository management"
    },
    "sequential-thinking": {
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\sadeg\\AppData\\Roaming\\npm\\node_modules\\@modelcontextprotocol\\server-sequential-thinking\\dist\\index.js"
      ],
      "env": {},
      "description": "Methodical problem-solving and debugging workflows"
    },
    "puppeteer": {
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\sadeg\\AppData\\Roaming\\npm\\node_modules\\@modelcontextprotocol\\server-puppeteer\\dist\\index.js"
      ],
      "env": {},
      "description": "Browser automation for Streamlit dashboard testing"
    },
    "mcp-debugger": {
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\sadeg\\AppData\\Roaming\\npm\\node_modules\\mcp-debugger\\bin\\mcp-debugger.js"
      ],
      "env": {},
      "description": "Postman collection debugging and API testing"
    },
    "pytest-mcp": {
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\sadeg\\AppData\\Roaming\\npm\\node_modules\\pytest-mcp-server\\dist\\cli.js"
      ],
      "env": {},
      "description": "Pytest test failure tracking and debugging"
    },
    "git-mcp": {
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\sadeg\\AppData\\Roaming\\npm\\node_modules\\@cyanheads\\git-mcp-server\\dist\\index.js"
      ],
      "env": {},
      "description": "Comprehensive Git operations and version control"
    },
    "sqlite-mcp": {
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\sadeg\\AppData\\Roaming\\npm\\node_modules\\mcp-sqlite\\mcp-sqlite-server.js",
        "D:\\Projects\\main\\logs\\pso_results.db"
      ],
      "env": {},
      "description": "SQLite database operations for PSO results analysis"
    },
    "mcp-analyzer": {
      "type": "stdio",
      "command": "python",
      "args": ["-m", "mcp_server_analyzer"],
      "env": {},
      "description": "RUFF linting and VULTURE dead code detection"
    },
    "numpy-mcp": {
      "type": "stdio",
      "command": "python",
      "args": ["D:\\Projects\\main\\.mcp_servers\\numpy-mcp\\server.py"],
      "env": {},
      "description": "NumPy numerical computations and linear algebra"
    },
    "pandas-mcp": {
      "type": "stdio",
      "command": "python",
      "args": ["D:\\Projects\\main\\.mcp_servers\\pandas-mcp-server\\server.py"],
      "env": {},
      "description": "Pandas data analysis and visualization for PSO results"
    }
  },
  "project": {
    "name": "DIP-SMC-PSO",
    "description": "Double Inverted Pendulum Sliding Mode Control with PSO Optimization",
    "mcp_usage": {
      "filesystem": "Code analysis, log file inspection, documentation review",
      "github": "Issue tracking, PR reviews, commit history analysis",
      "sequential-thinking": "Systematic debugging, multi-step problem solving",
      "puppeteer": "Streamlit dashboard testing, UI validation",
      "mcp-debugger": "API endpoint testing, Postman collection execution",
      "pytest-mcp": "Pytest failure analysis, test debugging workflows",
      "git-mcp": "Advanced Git operations, commit analysis, branch management",
      "sqlite-mcp": "PSO optimization results querying, convergence analysis",
      "mcp-analyzer": "Code quality checks with RUFF linter and VULTURE dead code detection",
      "numpy-mcp": "Numerical computations, matrix operations, statistical analysis for control systems",
      "pandas-mcp": "Advanced data analysis and visualization of PSO convergence and simulation results"
    }
  }
}
