{
  "permissions": {
    "allow": [
      "Bash(Select-Object -First 10 Name, LastWriteTime)",
      "Read(//d/**)",
      "Bash(mkdir:*)",
      "Bash(cat:*)",
      "Bash(python -c \"import ast; from pathlib import Path; count=0; for f in Path(''src'').rglob(''*.py''): \n    try:\n        tree = ast.parse(f.read_text(encoding=''utf-8'')); \n        for node in ast.walk(tree):\n            if isinstance(node, (ast.Module, ast.ClassDef, ast.FunctionDef, ast.AsyncFunctionDef)):\n                if ast.get_docstring(node): count += 1\n    except: pass\nprint(f''{count} docstrings found in src/'')\")",
      "Bash(python:*)",
      "WebSearch",
      "WebFetch(domain:arxiv.org)",
      "WebFetch(domain:doi.org)",
      "WebFetch(domain:link.springer.com)",
      "Bash(iconv:*)",
      "WebFetch(domain:epubs.siam.org)",
      "Bash(dir:*)",
      "Bash(Select-Object -First 20)",
      "Bash(findstr:*)",
      "Read(//tmp/**)",
      "Bash(find:*)",
      "Bash(test:*)",
      "Bash(cd:*)",
      "Bash(if exist scriptsdocstemplates dir scriptsdocstemplates /b)",
      "Bash(for:*)",
      "Bash(do grep -q \"Advanced Mathematical Theory\\|Architecture Diagram\" \"$f\")",
      "Bash(done)",
      "Bash(do if ! grep -q \"Advanced Mathematical Theory\\|Architecture Diagram\" \"$f\")",
      "Bash(then echo \"$f\")",
      "Bash(fi)",
      "Bash(Select-Object -First 30)",
      "Bash(awk:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "D:\\Projects"
    ]
  }
}
