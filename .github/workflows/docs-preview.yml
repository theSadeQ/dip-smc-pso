name: Documentation Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'docs/**'
      - 'src/**/*.py'
      - '.github/workflows/docs-preview.yml'

permissions:
  pull-requests: write
  contents: read

jobs:
  build-preview:
    name: Build Documentation Preview
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
          pip install -e .

      - name: Build preview documentation
        run: |
          cd docs
          sphinx-build -b html . _build/html

      - name: Upload preview artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-preview-pr-${{ github.event.pull_request.number }}
          path: docs/_build/html/
          retention-days: 7

      - name: Generate preview summary
        id: preview-summary
        run: |
          echo "## ðŸ“š Documentation Preview" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "A preview of the documentation has been built for this PR." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PR:** #${{ github.event.pull_request.number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.head_ref }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.event.pull_request.head.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          PAGE_COUNT=$(find docs/_build/html -name "*.html" | wc -l)
          echo "**Pages:** $PAGE_COUNT HTML files generated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Download the \`docs-preview-pr-${{ github.event.pull_request.number }}\` artifact to view the documentation locally." >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            const message = `## ðŸ“š Documentation Preview Built

            âœ… Documentation preview has been generated for commit ${context.sha.substring(0, 7)}.

            **Download Preview:**
            - Go to [Actions â†’ Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - Download \`docs-preview-pr-${{ github.event.pull_request.number }}\`
            - Extract and open \`index.html\` in your browser

            **Preview Details:**
            - Pages generated: ${await new Promise((resolve) => {
                require('child_process').exec('find docs/_build/html -name "*.html" | wc -l', (err, stdout) => {
                  resolve(stdout.trim());
                });
              })}
            - Build time: ${new Date().toUTCString()}

            ---
            <sub>ðŸ¤– Generated by Documentation Preview workflow</sub>`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('ðŸ“š Documentation Preview Built')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: message
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            }

  compare-docs:
    name: Compare Documentation Changes
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build-preview

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          path: base

      - name: Count documentation changes
        id: count-changes
        run: |
          cd pr

          # Count changed documentation files
          CHANGED_DOCS=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} -- 'docs/**/*.md' 'docs/**/*.rst' | wc -l)
          echo "changed_docs=$CHANGED_DOCS" >> $GITHUB_OUTPUT

          # Count new documentation files
          NEW_DOCS=$(git diff --name-status origin/${{ github.event.pull_request.base.ref }} -- 'docs/**/*.md' 'docs/**/*.rst' | grep '^A' | wc -l)
          echo "new_docs=$NEW_DOCS" >> $GITHUB_OUTPUT

          # Count deleted documentation files
          DELETED_DOCS=$(git diff --name-status origin/${{ github.event.pull_request.base.ref }} -- 'docs/**/*.md' 'docs/**/*.rst' | grep '^D' | wc -l)
          echo "deleted_docs=$DELETED_DOCS" >> $GITHUB_OUTPUT

      - name: Generate comparison summary
        run: |
          echo "## ðŸ“Š Documentation Changes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Modified:** ${{ steps.count-changes.outputs.changed_docs }} files" >> $GITHUB_STEP_SUMMARY
          echo "**New:** ${{ steps.count-changes.outputs.new_docs }} files" >> $GITHUB_STEP_SUMMARY
          echo "**Deleted:** ${{ steps.count-changes.outputs.deleted_docs }} files" >> $GITHUB_STEP_SUMMARY
