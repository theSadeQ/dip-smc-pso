{
  "group_name": "SMC Algorithms - Adaptive & Hybrid",
  "description": "Adaptive parameter estimation (RLS), hybrid switching logic",
  "total_claims": 9,
  "claims": [
    {
      "claim_id": "CODE-IMPL-132",
      "code_summary": "Implements online estimation of system uncertainties and disturbance bounds...",
      "file_path": "src\\controllers\\smc\\algorithms\\adaptive\\parameter_estimation.py",
      "line_number": "1",
      "description": "online estimation (attributed to: system uncertainties and disturbance bounds)"
    },
    {
      "claim_id": "CODE-IMPL-135",
      "code_summary": "Update parameter estimates using RLS algorithm...",
      "file_path": "src\\controllers\\smc\\algorithms\\adaptive\\parameter_estimation.py",
      "line_number": "250",
      "description": "None (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-150",
      "code_summary": "Initialize individual SMC controllers based on hybrid mode...",
      "file_path": "src\\controllers\\smc\\algorithms\\hybrid\\controller.py",
      "line_number": "112",
      "description": "None (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-152",
      "code_summary": "Hybrid Switching Logic for Multi-Controller SMC...",
      "file_path": "src\\controllers\\smc\\algorithms\\hybrid\\switching_logic.py",
      "line_number": "1",
      "description": "None (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-155",
      "code_summary": "Evaluate switching based on control effort...",
      "file_path": "src\\controllers\\smc\\algorithms\\hybrid\\switching_logic.py",
      "line_number": "265",
      "description": "None (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-157",
      "code_summary": "Evaluate switching based on adaptation rate (for adaptive controllers)...",
      "file_path": "src\\controllers\\smc\\algorithms\\hybrid\\switching_logic.py",
      "line_number": "319",
      "description": "None (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-159",
      "code_summary": "Evaluate switching based on time (round-robin or scheduled switching)...",
      "file_path": "src\\controllers\\smc\\algorithms\\hybrid\\switching_logic.py",
      "line_number": "381",
      "description": "None (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-121",
      "code_summary": "use named tuples are\n    subclasses of ``tuple``...",
      "file_path": "src\\controllers\\smc\\adaptive_smc.py",
      "line_number": "263",
      "description": "named tuples are\n    subclasses (attributed to: ``tuple``)"
    },
    {
      "claim_id": "CODE-IMPL-122",
      "code_summary": "Set dynamics model (for compatibility, not used in this implementation)...",
      "file_path": "src\\controllers\\smc\\adaptive_smc.py",
      "line_number": "427",
      "description": "None (attributed to: None)"
    }
  ]
}