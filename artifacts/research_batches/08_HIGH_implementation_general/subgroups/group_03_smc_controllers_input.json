{
  "group_name": "SMC Controllers - Classical & Super-Twisting",
  "description": "Classical SMC and Super-Twisting controller implementations",
  "total_claims": 6,
  "claims": [
    {
      "claim_id": "CODE-IMPL-178",
      "code_summary": "uses six gains in the order...",
      "file_path": "src\\controllers\\smc\\classic_smc.py",
      "line_number": "282",
      "description": "six gains (attributed to: the order)"
    },
    {
      "claim_id": "CODE-IMPL-180",
      "code_summary": "Reset ClassicalSMC controller state...",
      "file_path": "src\\controllers\\smc\\classic_smc.py",
      "line_number": "488",
      "description": "is provided for (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-201",
      "code_summary": "Numba\u2011accelerated core of the Super\u2011Twisting SMC...",
      "file_path": "src\\controllers\\smc\\sta_smc.py",
      "line_number": "35",
      "description": "None (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-204",
      "code_summary": "Initialize a Super\u2011Twisting Sliding Mode Controller...",
      "file_path": "src\\controllers\\smc\\sta_smc.py",
      "line_number": "195",
      "description": "for saturated sign (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-167",
      "code_summary": "Vectorized feasibility check for super\u2011twisting SMC gains...",
      "file_path": "src\\controllers\\smc\\algorithms\\super_twisting\\controller.py",
      "line_number": "248",
      "description": "None (attributed to: None)"
    },
    {
      "claim_id": "CODE-IMPL-517",
      "code_summary": "according to the super\u2011twisting\n    algorithm and are needed to resume control in the next time step...",
      "file_path": "src\\utils\\types\\control_outputs.py",
      "line_number": "86",
      "description": "the super\u2011twisting\n    algorithm and are needed to resume control (attributed to: the next time step)"
    }
  ]
}