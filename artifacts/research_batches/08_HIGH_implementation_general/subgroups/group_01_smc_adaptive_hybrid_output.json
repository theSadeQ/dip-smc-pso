[
 {
 "claim_id": "CODE-IMPL-132",
 "category": "B",
 "confidence": "HIGH",
 "rationale": "Implements an adaptive sliding mode control concept by estimating uncertainties, which is a theoretical control approach described in textbooks.",
 "code_summary": "Implements online estimation of system uncertainties and disturbance bounds...",
 "needs_citation": true,
 "concept": "Adaptive sliding mode control (uncertainty estimation)",
 "suggested_citation": "Slotine & Li (1991)",
 "bibtex_key": "slotine1991applied",
 "isbn": "978-0130408907",
 "book_title": "Applied Nonlinear Control",
 "reference_type": "book",
 "chapter_section": "Chapter 7: Sliding Control (Adaptive SMC)"
 },
 {
 "claim_id": "CODE-IMPL-135",
 "category": "A",
 "confidence": "HIGH",
 "rationale": "Implements the Recursive Least Squares (RLS) algorithm for parameter estimation, which is a well-known algorithm requiring citation.",
 "code_summary": "Update parameter estimates using RLS algorithm...",
 "needs_citation": true,
 "algorithm_name": "Recursive Least Squares (RLS) algorithm",
 "suggested_citation": "Ljung (1999)",
 "bibtex_key": "ljung1999system",
 "reference_type": "book",
 "isbn": "978-0136566953",
 "book_title": "System Identification: Theory for the User"
 },
 {
 "claim_id": "CODE-IMPL-150",
 "category": "C",
 "confidence": "HIGH",
 "rationale": "Initializes controllers depending on the hybrid mode, which is a pure implementation detail and does not involve any algorithm or theory needing citation.",
 "code_summary": "Initialize individual SMC controllers based on hybrid mode...",
 "needs_citation": false,
 "implementation_type": "initialization"
 },
 {
 "claim_id": "CODE-IMPL-152",
 "category": "A",
 "confidence": "HIGH",
 "rationale": "Implements the hybrid switching logic for multiple SMC controllers, an algorithmic approach in hybrid control that requires referencing hybrid system stability theory.",
 "code_summary": "Hybrid Switching Logic for Multi-Controller SMC...",
 "needs_citation": true,
 "algorithm_name": "Hybrid switching control logic",
 "suggested_citation": "Branicky (1998)",
 "bibtex_key": "branicky1998hybrid",
 "doi_or_url": "10.1109/9.664150",
 "paper_title": "Multiple Lyapunov functions and other analysis tools for switched and hybrid systems",
 "reference_type": "paper"
 },
 {
 "claim_id": "CODE-IMPL-155",
 "category": "C",
 "confidence": "HIGH",
 "rationale": "This is a specific implementation of a switching criterion based on control effort, which is an internal logic detail without a standard algorithm reference.",
 "code_summary": "Evaluate switching based on control effort...",
 "needs_citation": false,
 "implementation_type": "utility"
 },
 {
 "claim_id": "CODE-IMPL-157",
 "category": "C",
 "confidence": "HIGH",
 "rationale": "This implements a switching criterion based on the adaptation rate for adaptive controllers, which is a custom logic detail and does not correspond to a known algorithm requiring citation.",
 "code_summary": "Evaluate switching based on adaptation rate (for adaptive controllers)...",
 "needs_citation": false,
 "implementation_type": "utility"
 },
 {
 "claim_id": "CODE-IMPL-159",
 "category": "C",
 "confidence": "HIGH",
 "rationale": "This implements a time-based (round-robin) switching mechanism, a scheduling detail in the code not derived from a specific published algorithm, so no citation is needed.",
 "code_summary": "Evaluate switching based on time (round-robin or scheduled switching)...",
 "needs_citation": false,
 "implementation_type": "utility"
 },
 {
 "claim_id": "CODE-IMPL-121",
 "category": "C",
 "confidence": "HIGH",
 "rationale": "It discusses the use of Python named tuples (a programming detail), which is purely an implementation detail and not related to control theory or algorithms requiring citations.",
 "code_summary": "use named tuples are\n    subclasses of `tuple`...",
 "needs_citation": false,
 "implementation_type": "utility"
 },
 {
 "claim_id": "CODE-IMPL-122",
 "category": "C",
 "confidence": "HIGH",
 "rationale": "This is a compatibility function for setting the dynamics model, which is a software interface detail and not an algorithm or concept that needs citation.",
 "code_summary": "Set dynamics model (for compatibility, not used in this implementation)...",
 "needs_citation": false,
 "implementation_type": "interface"
 }
 ]
